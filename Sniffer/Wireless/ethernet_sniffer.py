import sys
from scapy.all import *


def PacketHandler(packet):
	if packet.haslayer(Ether):
		source_mac = packet.src
		destination_mac = packet.dst
		
		print("Source Mac: %s\tDestination Mac: %s\n" % (source_mac, destination_mac))
		
		if packet.haslayer(IP):
			source_ip=packet.getlayer(IP).src
			destination_ip=packet.getlayer(IP).dst
			
			print("Source IP: %s\tDestination IP: %s\n" % (str(source_ip), str(destination_ip)))
		
		if packet.haslayer(TCP):
			protocol="TCP"
			s_port=packet.getlayer(TCP).sport
			d_port=packet.getlayer(TCP).dport
			flag=packet.getlayer(TCP).flags
			
			print(protocol)
			print("sport: %s\tdport: %s" % (str(s_port), str(d_port))
			print("Flags: %s\n" % str(flag))
		
		if packet.haslayer(UDP):
			protocol="UDP"
			s_port=packet.getlayer(UDP).sport
			d_port=packet.getlayer(UDP).dport
			
			print(protocol)
			print("sport: %s\tdport: %s" % (str(s_port), str(d_port))
		
		if packet.haslayer(ARP):
			source_ip=packet.getlayer(ARP).psrc
			destination_ip=packet.getlayer(ARP).pdst
			print("Source IP: %s\tDestination IP: %s\n" % (str(source_ip), str(destination_ip)))
			
		if packet.haslayer(DNSQR):
			query=packet.getlayer(DNSQR).qname
			print("Query: %s\n" % str(query))
		
		print("#" * 40)
	else:
		print("It is not an ethernet packet.\n")


sniff(iface=sys.argv[1], count=int(sys.argv[2]), prn=PacketHandler)
